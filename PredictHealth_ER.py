import streamlit as st
from datetime import datetime
import pandas as pd
import pickle
import os

# Mapeos para las EPS
eps_dict = {1: 'AIC EPSIC', 3: 'ALIANSALUD', 4: 'ALIANSALUD EPS S.A', 5: 'AMBUQ CONTRIBUTIVO', 6: 'AMBUQ ESS', 7: 'ANAS WAYUU EPSI', 
 8: 'ANAS WAYUU EPSIC', 9: 'ARL FONDO DE RIESGOS LABORALES', 10: 'ARL SURA', 11: 'ASEGURADORA DE VIDA COLSEGUROS', 12: 'ASMESSALUD DE NARIÑO ESSC', 
 13: 'ASMET SALUD ESS', 14: 'ASMET SALUD ESSC', 15: 'ASOCIACIÓN MUTUAL SER EMPRESA SOLIDARIA DE SALUD E.S.S', 16: 'ASOCIACIÓN MUTUAL BARRIOS UNIDOS DE QUIBDÓ (AMBUQ EPS)', 
 17: 'ASOCIACIÓN MUTUAL SER EMPRESA SOLIDARIA DE SALUD - MUTUAL SER EPS', 18: 'BBVA SEGUROS DE VIDA COLOMBIA S A', 19: 'CAFESALUD EPS SA', 
 20: 'CAFESALUD MEDICINA PREPAGADA S A', 21: 'CAFESALUD SUBSIDIADO', 22: 'CAJA COMPENSACION COMFENALCO', 23: 'CAJACOPI ATLANTICO - CCFC', 
 24: 'CAJACOPI CCF055', 25: 'CAMACOL', 26: 'CAPITAL SALUD EPS-S', 27: 'CAPITAL SALUD EPSC34', 28: 'CAPRESOCA EPS', 29: 'CCF COMFACUNDI', 
 30: 'CCF COMFAMILIAR CARTAGENA', 31: 'CCF COMFAMILIAR DE LA GUAJIRA', 32: 'CCF COMFAMILIAR HUILA', 33: 'CCF COMFAMILIAR RISARALDA', 34: 'CCF COMFAORIENTE', 
 35: 'CCF COMFASUCRE', 36: 'CCF COMPENSAR', 37: 'CCF DE NARIÑO', 38: 'CIA DE SEGUROS BOLIVAR S A', 39: 'COLMENA SA MEDICINA PREPAGADA', 40: 'COLPATRIA EPS', 
 41: 'COLPATRIA SA MEDICINA PREPAGADA', 42: 'COLSANITAS', 43: 'COLSEGUROS EPS', 44: 'COMFACHOCO CCF', 45: 'COMFACHOCO-CCFC', 46: 'COMFACOR CCF015', 
 47: 'COMFAMILIAR DE LA GUAJIRA EPS-CCF', 48: 'COMFASUCRE CCFC', 49: 'COMFENALCO ANTIOQUIA', 50: 'COMFENALCO VALLE EPS', 51: 'COMFENALCO VALLE EPSS', 52: 'COMPARTA', 
 53: 'COMPARTA ESSC', 54: 'COMPAÑIA AGRICOLA DE SEGUROS DE VIDA S A', 55: 'COMPAÑIA CENTRAL DE SEGUROS DE VIDA SA', 56: 'COMPAÑIA DE SEGUROS DE VIDA AURORA', 
 57: 'COMPAÑIA MUNDIAL DE SEGUROS SA', 58: 'COMPAÑIA SURAMERICANA', 59: 'COMPAÑIA SURAMERICANA DE SEGUROS SA', 60: 'COMPAÑIA SURAMERICANA PREPAGADA', 61: 'COMPENSAR EPS', 
 62: 'CONVIDA EPS', 63: 'COOMEVA EPS SA', 64: 'COOMEVA EPSS', 65: 'COOMEVA MEDICINA PREPAGADA S A', 66: 'COOSALUD ESS EPS-S', 67: 'COOSALUD ESSC', 68: 'CRUZ BLANCA EPS SA', 
 69: 'CRUZ BLANCA EPSS', 70: 'CAJA DE COMPENSACIÓN FAMILIAR DEL ORIENTE COLOMBIANO (COMFAORIENTE)', 71: 'COLPATRIA MEDICINA PREPAGADA S.A.', 72: 'COLSEGURO', 
 73: 'COMPAÑÍA SURAMERICANA DE SEGUROS', 74: 'COMPENSAR EPS', 75: 'COOMEVA MEDICINA PREPAGADA S.A.', 76: 'COOSALUD EPS S.A.', 
 77: 'DEPARTAMENTO MEDICO Y ODONTOLOGICO DEL MUNICIPIO DE MEDELLIN', 78: 'DIRECCION DEPARTAMENTAL DE SALUD DE ANTIOQUIA', 79: 'DIRECCION DEPARTAMENTAL DE SALUD DE ARAUCA', 
 80: 'DIRECCION DEPARTAMENTAL DE SALUD DE BOLIVAR', 81: 'DIRECCION DEPARTAMENTAL DE SALUD DE BOYACA', 82: 'DIRECCION DEPARTAMENTAL DE SALUD DE CALDAS', 
 83: 'DIRECCION DEPARTAMENTAL DE SALUD DE CAQUETA', 84: 'DIRECCION DEPARTAMENTAL DE SALUD DE CASANARE', 85: 'DIRECCION DEPARTAMENTAL DE SALUD DE CAUCA', 
 86: 'DIRECCION DEPARTAMENTAL DE SALUD DE CESAR', 87: 'DIRECCION DEPARTAMENTAL DE SALUD DE CHOCO', 88: 'DIRECCION DEPARTAMENTAL DE SALUD DE CORDOBA', 
 89: 'DIRECCION DEPARTAMENTAL DE SALUD DE CUNDINAMARCA', 90: 'DIRECCION DEPARTAMENTAL DE SALUD DE GUAJIRA', 91: 'DIRECCION DEPARTAMENTAL DE SALUD DE HUILA', 
 92: 'DIRECCION DEPARTAMENTAL DE SALUD DE MAGDALENA', 93: 'DIRECCION DEPARTAMENTAL DE SALUD DE META', 94: 'DIRECCION DEPARTAMENTAL DE SALUD DE NORTE DE SANTANDER', 
 95: 'DIRECCION DEPARTAMENTAL DE SALUD DE PUTUMAYO', 96: 'DIRECCION DEPARTAMENTAL DE SALUD DE QUINDIO', 97: 'DIRECCION DEPARTAMENTAL DE SALUD DE RISARALDA', 
 98: 'DIRECCION DEPARTAMENTAL DE SALUD DE SANTANDER', 99: 'DIRECCION DEPARTAMENTAL DE SALUD DE SUCRE', 100: 'DIRECCION DEPARTAMENTAL DE SALUD DE TOLIMA', 
 101: 'DIRECCION DEPARTAMENTAL DE SALUD DE VALLE', 102: 'DIRECCION DISTRITAL DE SALUD DE BOGOTA', 103: 'DIRECCION GENERAL DE SANIDAD MILITAR', 
 104: 'DIRECCION SANIDAD POLICIA NACIONAL', 105: 'DIVISION DE SALUD DE LA UNIVERSIDAD DE ANTIOQUIA', 
 106: 'DIVISION DE SERVICIOS MEDICO ASISTENCIAL DE LA CORPORACION ELECTRICA DE LA COSTA ATLANTICA CORELCA', 107: 'DUSAKAWI EPSI', 108: 'DUSAKAWI ESS', 
 109: 'DIRECCIÓN DEPARTAMENTAL DE SALUD DE ANTIOQUIA', 110: 'DIRECCIÓN DEPARTAMENTAL DE SALUD DE ATLANTICO', 111: 'DIRECCIÓN DEPARTAMENTAL DE SALUD DE ANTIOQUIA', 
 112: 'DIRECCIÓN DEPARTAMENTAL DE SALUD DE ATLÁNTICO', 113: 'DIRECCIÓN DEPARTAMENTAL DE SALUD DE CALDAS', 114: 'DIRECCIÓN DEPARTAMENTAL DE SALUD DE CALDAS', 
 115: 'DIRECCIÓN DEPARTAMENTAL DE SALUD DE CESAR', 116: 'DIRECCIÓN DEPARTAMENTAL DE SALUD DE CHOCÓ', 117: 'DIRECCIÓN DEPARTAMENTAL DE SALUD DE HUILA', 
 118: 'DIRECCIÓN DEPARTAMENTAL DE SALUD DE LA GUAJIRA', 119: 'DIRECCIÓN DEPARTAMENTAL DE SALUD DE NORTE DE SANTANDER', 120: 'DIRECCIÓN DEPARTAMENTAL DE SALUD DE QUINDÍO', 
 121: 'DIRECCIÓN DEPARTAMENTAL DE SALUD DE RISARALDA', 122: 'DIRECCIÓN DEPARTAMENTAL DE SALUD DE SANTANDER', 123: 'DIRECCIÓN DEPARTAMENTAL DE SALUD DE SUCRE', 
 124: 'DIRECCIÓN MUNICIPAL DE SALUD DE ABEJORRAL', 125: 'E.P.S. SANITAS S.A.', 126: 'ECOOPSOS ESS', 127: 'ECOOPSOS ESSC', 128: 'ECOPETROL', 129: 'EMDISALUD ESS', 
 130: 'EMERGENCIA MÉDICA INTEGRAL EMI ANTIOQUIA SA SERVICIO DE AMBULANCIA PREPAGADO', 131: 'EMPRESAS PUBLICAS DE MEDELLIN DEPARTAMENTO MEDICO', 132: 'EMSSANAR ESS', 
 133: 'ESS COOPERATIVA VILLASALUD LTD', 134: 'EMPRESA MUTUAL PARA EL DESARROLLO INTEGRAL DE LA SALUD (EMDISALUD ESS-EPS-S)', 135: 'FAMISANAR EPS LTDA', 
 136: 'FAMISANAR EPSS', 137: 'FERROCARRILES NACIONALES DE COLOMBIA', 138: 'FIDUPREVISORA  SA REMG', 139: 'FIDUPREVISORA SA RES', 
 140: 'FONDO DE SOLIDARIDAD Y GARANTIA MINISTERIO DE SALUD', 141: 'FUERZAS MILITARES', 142: 'FUNDACIÓN SALUD MÍA EPS', 
 143: 'GENERALI COLOMBIA-SEGUROS GENERALES SA', 144: 'GENERALI COLOMBIA-SEGUROS GENERALES S.A.', 145: 'INPEC', 
 146: 'LA EQUIDAD SEGUROS DE VIDA ORGANISMO COOPERATIVO -LA EQUIDAD VIDA-', 147: 'LA INTERAMERICANA COMPAÑIA DE SEGUROS GENERALES SA', 
 148: 'LA PREVISORA SA COMPAÑIA DE SEGUROS', 149: 'LIBERTY SEGUROS DE VIDA SA', 150: 'LIBERTY SEGUROS SA', 151: 'LA PREVISORA S.A', 152: 'LIBERTY SEGUROS', 
 153: 'MALLAMAS EPSI', 154: 'MALLAMAS EPSIC', 155: 'MAPFRE COLOMBIA VIDA SEGUROS SA', 156: 'MAPFRE SEGUROS GENERALES DE COLOMBIA SA', 157: 'MEDIMAS EPS CONTRIBUTIVO', 
 158: 'MEDIMAS EPS MOVILIDAD CONTRIBUTIVO', 159: 'MEDIMAS EPS MOVILIDAD SUBSIDIADO', 160: 'MEDIMAS EPS SUBSIDIADO', 161: 'MEDISALUD COMPAÑIA COLOMBIANA DE MEDICINA PREPAGADA SA', 162: 'MEDISANITAS SA PREPAGADA', 
 163: 'MUNDIAL DE SEGUROS DE VIDA SA', 164: 'MUTUAL SER ESS', 165: 'MUNDIAL DE SEGUROS', 166: 'NUEVA EPS', 167: 'NUEVA EPS CONTRIBUTIVO', 168: 'NUEVA EPS SA SUBSIDIADO', 
 169: 'NUEVA EPSS', 170: 'OTRA', 171: 'PANAMERICANA DE COLOMBIA COMPAÑIA DE SEGUROS DE VIDA SA', 172: 'PIJAOS SALUD EPSI', 173: 'PIJAOSALUD EPSIC', 174: 'POLICIA NACIONAL', 
 175: 'POSITIVA COMPAÑIA DE SEGUROS - LA PREVISORA VIDA', 176: 'PROGRAMA DE SALUD UNIVERSIDAD DE ANTIOQUIA', 177: 'QBE SEGUROS SA', 178: 'RES FONDO PRESTACION SOCIAL CO', 
 179: 'RIESGOS PROFESIONALES COLMENA SA COMPAÑIA DE SEGUROS DE VIDA', 180: 'RISARALDA LTDA EN LIQUIDACION EPS', 181: 'ROYAL & SUN ALLIANCE SEGUROS (COLOMBIA) SA', 
 182: 'SALUD TOTAL SA EPS', 183: 'SALUD TOTAL SA SUBSIDIADO', 184: 'SALUD VIDA EPS', 185: 'SALUD VIDA SA ENTIDAD PROMOTORA DE SALUD', 186: 'SALUDCOLOMBIA ENTIDAD PROMOTORA DE SALUD SA', 
 187: 'SALUDVIDA', 188: 'SALUDVIDA EPS SA', 189: 'SANITAS EPS SA', 190: 'SAVIA SALUD', 191: 'SAVIA SALUD EPS', 192: 'SEGUROS COLPATRIA S.A.', 193: 'SEGUROS COMERCIALES BOLIVAR SA', 
 194: 'SEGUROS DE VIDA ALFA SA', 195: 'SEGUROS DE VIDA COLPATRIA S A', 196: 'SEGUROS DE VIDA DEL ESTADO SA', 197: 'SEGUROS DEL ESTADO SA', 198: 'SERVICIO NACIONAL DE APRENDIZAJE - SENA', 
 199: 'SOLSALUD EPS SA', 200: 'SOS EPS', 201: 'SOS EPSS', 202: 'SURA EPS', 203: 'SEGUROS DEL ESTADO', 204: 'UISALUD', 205: 'UNISALUD EAS', 206: 'UNISALUD RES', 207: 'UNISALUD REUE', 208: 'UNIVERSIDAD DE ANTIOQUIA', 
 209: 'UNIVERSIDAD DEL CAUCA UNIDAD DE SALUD', 210: 'UNIVERSIDAD DEL VALLE SERVICIO DE SALUD', 211: 'UNIVERSIDAD DE CÓRDOBA', 212: 'UNIVERSIDAD DE NARIÑO'}

# Mapeos para las IPS
prestadores_dict  = {
 50010212604: 'AUNA CENTRO MÉDICO LAS AMÉRICAS SEDE ARKADIA',
 50010217854: 'CENTRO DE SALUD SANTO DOMINGO',
 50010211001: 'CLINICA CARDIO VID',
 50010909923: 'CLINICA CENTRAL FUNDADORES',
 50010329301: 'CLINICA DE CIRUGIA AMBULATORIA CONQUISTADORES',
 50010464802: 'CLINICA DEL PRADO CIUDAD DEL RIO',
 50010209201: 'CLINICA EL ROSARIO SEDE CENTRO',
 50010209202: 'CLINICA EL ROSARIO SEDE EL TESORO',
 50010217203: 'CLINICA MEDELLIN OCCIDENTE',
 50010217202: 'CLINICA MEDELLIN POBLADO',
 50010217201: 'CLINICA MEDELLIN S.A',
 50010344803: 'CLINICA UNIVERSITARIA BOLIVARIANA',
 50010218601: 'CLINISANITAS MEDELLIN',
 50010212601: 'CLÍNICA LAS AMERICAS',
 50010420901: 'COOPERATIVA DE SALUD SAN ESTEBAN',
 50011313101: 'CORPORACIÓN HOSPITAL INFANTIL CONCEJO DE MEDELLÍN',
 50010212401: 'CORPORACIÓN PARA ESTUDIOS EN SALUD CLINICA CES',
 50010608601: 'E.S.E. HOSPITAL LA MARIA',
 50011930101: 'ENDOGINE IPS SAS',
 50010558607: 'FUNDACION COLOMBIANA DE CANCEROLOGIA CLINICA VIDA',
 50010217501: 'FUNDACION HOSPITALARIA SAN VICENTE DE PAUL',
 50010115001: 'FUNDACIÓN INSTITUTO NEUROLOGICO DE COLOMBIA',
 50010214401: 'HOSPITAL GENERAL DE MEDELLÍN LUZ CASTRO DE GUT',
 50010210401: 'HOSPITAL PABLO TOBON URIBE',
 50010212001: 'INVERSIONES MEDICAS DE ANTIOQUIA S.A. CLINICA',
 50010425919: 'IPS SURA INDUSTRIALES MEDELLIN',
 50010425930: 'IPS SURA LAS VEGAS MEDELLIN',
 50010425925: 'IPS SURA LOS MOLINOS MEDELLIN',
 50010425936: 'IPS SURA SAN DIEGO',
 50011174601: 'NUEVA CLINICA SAGRADO CORAZON S.A.S',
 50010558603: 'OTRA',
 50010217801: 'SEDE ADMINISTRATIVA EDIFICIO SACATIN',
 50010590903: 'SEDE PRINCIPAL HOSPITAL ALMA MÁTER DE ANTIOQUIA',
 50010210101: 'SOCIEDAD MEDICA ANTIOQUEÑA S.A. SOMA',
 50011679101: 'TRAUMACENTRO S.A.A',
 50010217862: 'UNIDAD DE SALUD MENTAL',
 50010217802: 'UNIDAD HOSPITALARIA DE BELEN HECTOR ABAD GOMEZ',
 50010217808: 'UNIDAD HOSPITALARIA DE CASTILLA JAIME TOBON AR',
 50010217804: 'UNIDAD HOSPITALARIA DE MANRRIQUE HERMENEGILDO',
 50010217807: 'UNIDAD HOSPITALARIA DOCE DE OCTUBRE LUIS CARLO',
 50010217861: 'UNIDAD HOSPITALARIA NUEVO OCCIDENTE',
 50010217811: 'UNIDAD HOSPITALARIA SAN ANTONIO DE PRADO DIEGO',
 50010217810: 'UNIDAD HOSPITALARIA SAN CRISTOBAL LEONARDO BET',
 50010217809: 'UNIDAD HOSPITALARIA SAN JAVIER JESÚS PELÁEZ BO',
 50010217857: 'UNIDAD HOSPITALARIA SANTA CRUZ VÍCTOR CÁRDENAS',
 50011427607: 'VIRREY SOLIS I.P.S S.A SAN DIEGO',
 50011427609: 'VIRREY SOLIS IPS FLORIDA',
 50011427610: 'VIRREY SOLÍS IPS. S.A TRANVÍA PLAZA'
 }

# mapeo municipios
municipio_dict_1 = {'ABEJORRAL': 2.0, 'ABRIAQUI': 4.0, 'ALEJANDRIA': 21.0, 'AMAGA': 30.0, 'AMALFI': 31.0, 'ANDES': 34.0, 'ANGELOPOLIS': 36.0, 'ANGOSTURA': 38.0, 'ANORI': 40.0, 'ANZA': 44.0, 'APARTADO': 45.0, 'ARBOLETES': 51.0, 'ARGELIA': 54.0, 'ARMENIA': 1.0, 'BARBOSA': 77.0, 'BELLO': 88.0, 'BELMIRA': 86.0, 'BETANIA': 91.0, 'BETULIA': 92.0, 'BOLIVAR': 100.0, 'BRICEÑO': 106.0, 'BURITICA': 113.0, 'CACERES': 120.0, 'CAICEDO': 125.0, 'CALDAS': 131.0, 'CAMPAMENTO': 134.0, 'CAÑASGORDAS': 138.0, 'CARACOLI': 142.0, 'CARAMANTA': 145.0, 'CAREPA': 147.0, 'CARMEN DE VIBORAL': 148.0, 'CAROLINA': 150.0, 'CAUCASIA': 154.0, 'CHIGORODO': 172.0, 'CISNEROS': 190.0, 'COCORNA': 197.0, 'CONCEPCION': 207.0, 'CONCORDIA': 205.0, 'COPACABANA': 212.0, 'DABEIBA': 234.0, 'DON MATIAS': 237.0, 'EBEJICO': 240.0, 'EL BAGRE': 250.0, 'ENTRERRIOS': 264.0, 'ENVIGADO': 266.0, 'FREDONIA': 282.0, 'FRONTINO': 284.0, 'MEDELLIN': 1.0, 'PUERTO NARE (LA MAGDALENA)': 585.0, 'PEREIRA': 1.0, 'BUCARAMANGA': 1.0, 'AGUADA': 13.0, 'ALBANIA': 20.0, 'APIA': 45.0, 'ARATOCA': 51.0, 'BALBOA': 75.0, 'BARICHARA': 79.0, 'BARRANCABERMEJA': 81.0, 'BELEN DE UMBRIA': 88.0, 'CAPITANEJO': 147.0, 'CARCASI': 152.0, 'CEPITA': 160.0, 'CERRITO': 162.0, 'CHARTA': 169.0, 'DOS QUEBRADAS': 170.0, 'CHIMA': 168.0, 'CIMITARRA': 190.0, 'CONFINES': 209.0, 'COROMORO': 217.0, 'EL CARMEN DE CHUCURY': 235.0, 'EL GUACAMAYO': 245.0, 'EL PEÑON': 258.0, 'EL PLAYON': 255.0, 'ENCINO': 264.0, 'ENCISO': 266.0, 'GUATICA': 318.0, 'LA CELIA': 383.0, 'LA VIRGINIA': 400.0, 'LA TEBAIDA': 401.0, 'MARSELLA': 440.0, 'MISTRATO': 456.0, 'MONTENEGRO': 470.0, 'PUEBLO RICO': 572.0, 'QUIMBAYA': 594.0, 'QUINCHIA': 594.0, 'SANTA ROSA DE CABAL': 682.0, 'SANTUARIO': 697.0, 'SALENTO': 690.0, 'ANTIOQUIA': 42.0, 'GIRALDO': 306.0, 'GIRARDOTA': 308.0, 'GOMEZ PLATA': 310.0, 'GRANADA': 313.0, 'GUADALUPE': 320.0, 'GUARNE': 318.0, 'GUATAPE': 321.0, 'HELICONIA': 347.0, 'HISPANIA': 353.0, 'ITAGUI': 360.0, 'ITUANGO': 361.0, 'JARDIN': 364.0, 'JERICO': 368.0, 'LA CEJA': 376.0, 'LA ESTRELLA': 380.0, 'LA PINTADA': 390.0, 'LA UNION': 400.0, 'LIBORINA': 411.0, 'MACEO': 425.0, 'MARINILLA': 440.0, 'MONTEBELLO': 467.0, 'MURINDO': 475.0, 'MUTATA': 480.0, 'NARIÑO': 483.0, 'NECHI': 495.0, 'NECOCLI': 490.0, 'OLAYA': 501.0, 'PEÑOL': 541.0, 'PEQUE': 543.0, 'PUEBLORRICO': 576.0, 'PUERTO BERRIO': 579.0, 'PUERTO TRIUNFO': 591.0, 'REMEDIOS': 604.0, 'RETIRO': 607.0, 'RIONEGRO': 615.0, 'SABANALARGA': 300.0, 'SABANETA': 631.0, 'SALGAR': 642.0, 'SAN ANDRES': 1.0, 'SAN CARLOS': 678.0, 'SAN FRANCISCO': 755.0, 'SAN JERONIMO': 656.0, 'SAN JOSE DE LA MONTAÑA': 658.0, 'SAN JUAN DE URABA': 659.0, 'SAN LUIS': 678.0, 'SAN PEDRO': 670.0, 'SAN PEDRO DE URABA': 665.0, 'SAN RAFAEL': 667.0, 'SAN ROQUE': 670.0, 'SAN VICENTE': 674.0, 'SANTA BARBARA': 705.0, 'SANTA ROSA DE OSOS': 686.0, 'SANTO DOMINGO': 690.0, 'SEGOVIA': 736.0, 'SONSON': 756.0, 'SOPETRAN': 761.0, 'TAMESIS': 789.0, 'TARAZA': 790.0, 'TARSO': 792.0, 'TITIRIBI': 809.0, 'TOLEDO': 820.0, 'TURBO': 837.0, 'URAMITA': 842.0, 'URRAO': 847.0, 'VALDIVIA': 854.0, 'VALPARAISO': 860.0, 'VEGACHI': 858.0, 'VENECIA': 861.0, 'VIGIA DEL FUERTE': 873.0, 'YALI': 885.0, 'YARUMAL': 887.0, 'YOLOMBO': 890.0, 'YONDO': 893.0, 'ZARAGOZA': 895.0, 'BARRANQUILLA (DISTRITO ESPECIAL  INDUSTRIAL Y PORTUARIO DE BARRANQUILLA)': 1.0, 'BARANOA': 78.0, 'CAMPO DE LA CRUZ': 137.0, 'CANDELARIA': 130.0, 'GALAPA': 296.0, 'JUAN DE ACOSTA': 372.0, 'MALAMBO': 433.0, 'MANATI': 436.0, 'PALMAR DE VARELA': 520.0, 'PIOJO': 549.0, 'POLO NUEVO': 558.0, 'PONEDERA': 560.0, 'PUERTO COLOMBIA': 573.0, 'REPELON': 606.0, 'SABANAGRANDE': 634.0, 'SANTA LUCIA': 675.0, 'SANTO TOMAS': 685.0, 'SOLEDAD': 758.0, 'USIACURI': 849.0, 'CARTAGENA (DISTRITO TURISTICO Y CULTURAL DE CARTAGENA)': 1.0, 'ACHI': 6.0, 'ALTOS DEL ROSARIO': 30.0, 'ARENAL': 42.0, 'ARJONA': 52.0, 'BARRANCO DE LOBA': 74.0, 'CANTAGALLO': 160.0, 'CORDOBA': 212.0, 'CLEMENCIA': 222.0, 'EL CARMEN DE BOLIVAR': 244.0, 'EL GUAMO': 248.0, 'HATILLO DE LOBA': 300.0, 'MAGANGUE': 430.0, 'MAHATES': 433.0, 'MARGARITA': 440.0, 'MARIA LA BAJA': 442.0, 'MONTECRISTO': 458.0, 'MOMPOS': 468.0, 'MORALES': 473.0, 'PINILLOS': 549.0, 'REGIDOR': 580.0, 'RIO VIEJO': 600.0, 'SAN CRISTOBAL': 620.0, 'SAN ESTANISLAO': 647.0, 'SAN FERNANDO': 650.0, 'SAN JACINTO': 654.0, 'SAN JACINTO DEL CAUCA': 655.0, 'SAN JUAN NEPOMUCENO': 657.0, 'SAN MARTIN DE LOBA': 667.0, 'SAN PABLO': 693.0, 'SANTA CATALINA': 673.0, 'SANTA ROSA': 701.0, 'SANTA ROSA DEL SUR': 688.0, 'SIMITI': 744.0, 'TALAIGUA NUEVO': 780.0, 'TIQUISIO (PUERTO RICO)': 810.0, 'TURBACO': 836.0, 'VILLANUEVA': 440.0, 'ZAMBRANO': 894.0, 'SANTA FE DE BOGOTA, D. C.': 1.0, 'SANTAFE DE BOGOTA D.C.-USAQUEN': 1.0, 'SANTAFE DE BOGOTA D.C.-CHAPINERO': 2.0, 'SANTAFE DE BOGOTA D.C.-SANTA FE': 3.0, 'SANTAFE DE BOGOTA D.C.-SAN CRISTOBAL': 4.0, 'SANTAFE DE BOGOTA D.C.-TUNJUELITO': 6.0, 'SANTAFE DE BOGOTA D.C.-ENGATIVA': 10.0, 'SANTAFE DE BOGOTA D.C.-SUBA': 11.0, 'SANTAFE DE BOGOTA D.C.-TEUSAQUILLO': 13.0, 'SANTAFE DE BOGOTA D.C.-ANTONIO NARIÑO': 15.0, 'SANTAFE DE BOGOTA D.C.-PUENTE ARANDA': 16.0, 'SANTAFE DE BOGOTA D.C.-CIUDAD BOLIVAR': 19.0, 'SANTAFE DE BOGOTA D.C.-SUMAPAZ': 20.0, 'AGUA DE DIOS': 1.0, 'ALBAN': 19.0, 'ANAPOIMA': 35.0, 'ANOLAIMA': 40.0, 'ARBELAEZ': 53.0, 'BELTRAN': 86.0, 'BOJACA': 99.0, 'CABRERA': 120.0, 'CACHIPAY': 123.0, 'CAJICA': 126.0, 'CAPARRAPI': 148.0, 'CAQUEZA': 151.0, 'CARMEN DE CARUPA': 154.0, 'CHAGUANI': 168.0, 'CHIA': 175.0, 'CHIPAQUE': 178.0, 'CHOACHI': 181.0, 'CHOCONTA': 183.0, 'COGUA': 200.0, 'COTA': 214.0, 'EL COLEGIO': 245.0, 'FACATATIVA': 269.0, 'FOMEQUE': 279.0, 'FUNZA': 286.0, 'FUQUENE': 288.0, 'FUSAGASUGA': 290.0, 'GACHANCIPA': 295.0, 'GAMA': 299.0, 'GIRARDOT': 307.0, 'GUACHETA': 317.0, 'GUADUAS': 320.0, 'GUATAVITA': 326.0, 'GUAYABAL DE SIQUIMA': 328.0, 'JERUSALEN': 368.0, 'JUNIN': 372.0, 'LA CALERA': 377.0, 'LA MESA': 386.0, 'LA PEÑA': 398.0, 'MADRID': 430.0, 'MANTA': 436.0, 'MEDINA': 438.0, 'MOSQUERA': 473.0, 'NEMOCON': 486.0, 'NILO': 488.0, 'NOCAIMA': 491.0, 'APULO (RAFAEL REYES)': 599.0, 'PACHO': 513.0, 'PAIME': 518.0, 'PANDI': 524.0, 'PUERTO SALGAR': 572.0, 'PULI': 580.0, 'QUEBRADANEGRA': 592.0, 'QUETAME': 594.0, 'RICAURTE': 612.0, 'SAN ANTONIO DEL TEQUENDAMA': 645.0, 'SAN BERNARDO': 685.0, 'SAN CAYETANO': 673.0, 'SAN JUAN DE RIOSECO': 662.0, 'SESQUILE': 736.0, 'SILVANIA': 743.0, 'SIMIJACA': 745.0, 'SOACHA': 754.0, 'SOPO': 758.0, 'SUBACHOQUE': 769.0, 'SUPATA': 777.0, 'SUTATAUSA': 781.0, 'TABIO': 785.0, 'TENJO': 799.0, 'TIBIRITA': 807.0, 'TOCAIMA': 815.0, 'TOCANCIPA': 817.0, 'TOPAIPI': 823.0, 'UBATE': 843.0, 'UNE': 845.0, 'VENECIA (OSPINA PEREZ)': 506.0, 'VERGARA': 862.0, 'VIANI': 867.0, 'VILLAGOMEZ': 871.0, 'VILLAPINZON': 873.0, 'VILLETA': 875.0, 'YACOPI': 885.0, 'NEIVA': 1.0, 'ACEVEDO': 6.0, 'AGRADO': 13.0, 'AIPE': 16.0, 'ALGECIRAS': 20.0, 'ALTAMIRA': 26.0, 'BARAYA': 78.0, 'COLOMBIA': 206.0, 'ELIAS': 244.0, 'GARZON': 298.0, 'GIGANTE': 306.0, 'HOBO': 349.0, 'ISNOS (SAN JOSE DE ISNOS)': 359.0, 'LA ARGENTINA': 378.0, 'LA PLATA': 396.0, 'ZIPACON': 898.0, 'ZIPAQUIRA': 899.0, 'NATAGA': 483.0, 'OPORAPA': 503.0, 'PAICOL': 518.0, 'PALERMO': 524.0, 'PITALITO': 551.0, 'RIVERA': 615.0, 'SALADOBLANCO': 660.0, 'SAN AGUSTIN': 668.0, 'SANTA MARIA': 690.0, 'TELLO': 799.0, 'TIMANA': 807.0, 'YAGUARA': 885.0, 'TUNJA': 1.0, 'ALMEIDA': 22.0, 'ARCABUCO': 51.0, 'BELEN': 83.0, 'BERBEO': 90.0, 'BETEITIVA': 92.0, 'BOAVITA': 97.0, 'BOYACA': 104.0, 'BUENAVISTA': 110.0, 'CAMPOHERMOSO': 135.0, 'CERINZA': 162.0, 'CHINAVITA': 172.0, 'CHIQUINQUIRA': 176.0, 'CHITA': 183.0, 'CHIVATA': 187.0, 'CIENEGA': 189.0, 'COPER': 212.0, 'CORRALES': 215.0, 'CUBARA': 223.0, 'CUITIVA': 226.0, 'DUITAMA': 238.0, 'EL COCUY': 244.0, 'EL ESPINO': 248.0, 'FIRAVITOBA': 272.0, 'FLORESTA': 276.0, 'GAMEZA': 296.0, 'GARAGOA': 299.0, 'GUACAMAYAS': 317.0, 'LA CAPILLA': 380.0, 'LA UVITA': 403.0, 'LA VICTORIA': 430.0, 'LABRANZAGRANDE': 377.0, 'MACANAL': 425.0, 'MARIPI': 442.0, 'MIRAFLORES': 200.0, 'MONGUA': 464.0, 'MONGUI': 466.0, 'MONIQUIRA': 469.0, 'MUZO': 480.0, 'NOBSA': 491.0, 'OICATA': 500.0, 'OTANCHE': 507.0, 'PAJARITO': 518.0, 'PANQUEBA': 522.0, 'PAYA': 533.0, 'PISBA': 550.0, 'PUERTO BOYACA': 572.0, 'QUIPAMA': 580.0, 'RAMIRIQUI': 599.0, 'RAQUIRA': 600.0, 'RONDON': 621.0, 'SACHICA': 638.0, 'SAN EDUARDO': 660.0, 'SAN JOSE DE PARE': 664.0, 'SAN LUIS DE GACENO': 667.0, 'SAN MATEO': 673.0, 'SAN MIGUEL DE SEMA': 676.0, 'SANTA ROSA DE VITERBO': 693.0, 'SANTA SOFIA': 696.0, 'SANTANA': 686.0, 'SATIVANORTE': 720.0, 'SATIVASUR': 723.0, 'SOATA': 753.0, 'SOCOTA': 755.0, 'SOGAMOSO': 759.0, 'SOMONDOCO': 761.0, 'SOTAQUIRA': 763.0, 'TASCO': 790.0, 'TIBASOSA': 806.0, 'TIPACOQUE': 810.0, 'TOPAGA': 820.0, 'TURMEQUE': 835.0, 'TUTA': 837.0, 'FLORENCIA': 290.0, 'POPAYAN': 1.0, 'ALMAGUER': 22.0, 'CARTAGENA DEL CHAIRA': 150.0, 'CURILLO': 205.0, 'EL DONCELLO': 247.0, 'LA MONTAÑITA': 410.0, 'MILAN': 460.0, 'PUERTO RICO': 592.0, 'SAN JOSE DE FRAGUA': 610.0, 'SAN VICENTE DEL CAGUAN': 753.0, 'SOLANO': 756.0, 'SOLITA': 785.0, 'UMBITA': 842.0, 'VENTAQUEMADA': 861.0, 'VALLEDUPAR': 1.0, 'AGUACHICA': 11.0, 'AGUSTIN CODAZZI': 13.0, 'ASTREA': 32.0, 'BECERRIL': 45.0, 'BOSCONIA': 60.0, 'BUENOS AIRES': 110.0, 'CAJIBIO': 130.0, 'CALDONO': 137.0, 'CALOTO': 142.0, 'CHIMICHAGUA': 175.0, 'CHIRIGUANA': 178.0, 'CORINTO': 212.0, 'CURUMANI': 228.0, 'EL COPEY': 238.0, 'EL PASO': 250.0, 'GAMARRA': 295.0, 'GONZALEZ': 310.0, 'GUAPI': 318.0, 'INZA': 355.0, 'JAMBALO': 364.0, 'LA GLORIA': 383.0, 'LA SIERRA': 392.0, 'LA VEGA': 397.0, 'LOPEZ (MICAY)': 418.0, 'MERCADERES': 450.0, 'MIRANDA': 455.0, 'PADILLA': 513.0, 'PAEZ (BELALCAZAR)': 517.0, 'PIAMONTE': 533.0, 'PUERTO TEJADA': 573.0, 'PURACE (COCONUCO)': 585.0, 'ROSAS': 622.0, 'SAN SEBASTIAN': 693.0, 'SANTANDER DE QUILICHAO': 698.0, 'SILVIA': 743.0, 'SUAREZ': 780.0, 'TIMBIO': 807.0, 'TIMBIQUI': 809.0, 'TOTORO': 824.0, 'VILLARICA': 845.0, 'MONTERIA': 1.0, 'AYAPEL': 68.0, 'CANALETE': 90.0, 'CERETE': 162.0, 'CHINU': 182.0, 'CIENAGA DE ORO': 189.0, 'COTORRA': 300.0, 'LA APARTADA': 350.0, 'LA JAGUA IBIRICO': 400.0, 'LORICA': 417.0, 'LOS CORDOBAS': 419.0, 'MANAURE (BALCON DEL CESAR)': 443.0, 'MOMIL': 464.0, 'MONTELIBANO': 466.0, 'MOÑITOS': 500.0, 'PAILITAS': 517.0, 'PELAYA': 550.0, 'PLANETA RICA': 555.0, 'PUEBLO BELLO': 570.0, 'PUEBLO NUEVO': 570.0, 'PUERTO ESCONDIDO': 574.0, 'PUERTO LIBERTADOR': 580.0, 'RIO DE ORO': 614.0, 'LA PAZ (ROBLES)': 621.0, 'SAHAGUN': 660.0, 'SAN ANDRES SOTAVENTO': 670.0, 'SAN ANTERO': 672.0, 'SAN BERNARDO DEL VIENTO': 675.0, 'SAN PELAYO': 686.0, 'SAN ALBERTO': 710.0, 'SAN DIEGO': 750.0, 'TAMALAMEQUE': 787.0, 'TIERRALTA': 807.0, 'VALENCIA': 855.0, 'QUIBDO (SAN FRANCISCO DE QUIBDO)': 1.0, 'ACANDI': 6.0, 'ALTO BAUDO (PIE DE PATO)': 25.0, 'ATRATO': 50.0, 'BAGADO': 73.0, 'BAHIA SOLANO (MUTIS)': 75.0, 'BAJO BAUDO (PIZARRO)': 77.0, 'BOJAYA (BELLAVISTA)': 99.0, 'CANTON DE SAN PABLO (MANAGRU)': 135.0, 'CONDOTO': 205.0, 'EL CARMEN DE ATRATO': 245.0, 'LITORAL DEL BAJO SAN JUAN (SANTA GENOVEVA DE DOCORDO)': 250.0, 'ISTMINA': 361.0, 'JURADO': 372.0, 'LLORO': 413.0, 'MEDIO ATRATO': 425.0, 'MEDIO BAUDO': 430.0, 'NOVITA': 491.0, 'NUQUI': 495.0, 'RIOQUITO': 600.0, 'RIOSUCIO': 614.0, 'SAN JOSE DEL PALMAR': 660.0, 'SIPI': 745.0, 'TADO': 787.0, 'UNGUIA': 800.0, 'UNION PANAMERICANA': 810.0, 'RIOHACHA': 1.0, 'SANTA MARTA (DISTRITO TURISTICO  CULTURAL E HISTORICODE SANTA MARTA)': 1.0, 'ALGARROBO': 30.0, 'ARACATACA': 53.0, 'BARRANCAS': 78.0, 'DIBULLA': 90.0, 'DISTRACCION': 98.0, 'EL MOLINO': 110.0, 'CHIVOLO': 170.0, 'CIENAGA': 189.0, 'EL BANCO': 245.0, 'EL PIÑON': 258.0, 'EL RETEN': 268.0, 'FONSECA': 279.0, 'FUNDACION': 288.0, 'GUAMAL': 318.0, 'HATONUEVO': 378.0, 'MAICAO': 430.0, 'PEDRAZA': 541.0, 'MANAURE': 560.0, 'SAN JUAN DEL CESAR': 650.0, 'URIBIA': 847.0, 'URUMITA': 855.0, 'PASTO (SAN JUAN DE PASTO)': 1.0, 'VILLAVICENCIO': 1.0, 'ACACIAS': 6.0, 'ALBAN (SAN JOSE)': 19.0, 'ALDANA': 22.0, 'ANCUYA': 36.0, 'ARBOLEDA (BERRUECOS)': 51.0, 'BARBACOAS': 79.0, 'BARRANCA DE UPIA': 110.0, 'BUESACO': 110.0, 'CABUYARO': 124.0, 'CASTILLA LA NUEVA': 150.0, 'COLON (GENOVA)': 203.0, 'CONSACA': 207.0, 'SAN LUIS DE CUBARRAL': 223.0, 'CUMARAL': 226.0, 'EL CALVARIO': 245.0, 'MESETAS': 330.0, 'LA MACARENA': 350.0, 'LEJANIAS': 400.0, 'PUERTO CONCORDIA': 450.0, 'PIVIJAY': 551.0, 'PLATO': 555.0, 'PUERTO GAITAN': 568.0, 'PUEBLOVIEJO': 570.0, 'PUERTO LOPEZ': 573.0, 'RESTREPO': 606.0, 'SABANAS DE SAN ANGEL': 660.0, 'SALAMINA': 653.0, 'SAN CARLOS DE GUAROA': 680.0, 'SAN JUAN DE ARAMA': 683.0, 'SAN JUANITO': 686.0, 'SAN MARTIN': 689.0, 'SAN SEBASTIAN DE BUENAVISTA': 692.0, 'SAN ZENON': 703.0, 'SANTA ANA': 707.0, 'VISTAHERMOSA': 711.0, 'SITIONUEVO': 745.0, 'CHACHAGUI': 240.0, 'CUMBITARA': 233.0, 'EL CHARCO': 250.0, 'EL PEÑOL': 254.0, 'EL TABLON': 258.0, 'FRANCISCO PIZARRO (SALAHONDA)': 520.0, 'GUACHUCAL': 317.0, 'GUAITARILLA': 320.0, 'IPIALES': 356.0, 'LA CRUZ': 378.0, 'LA FLORIDA': 381.0, 'LA TOLA': 390.0, 'LEIVA': 405.0, 'LINARES': 411.0, 'LOS ANDES (SOTOMAYOR)': 418.0, 'OLAYA HERRERA (BOCAS DE SATINGA)': 490.0, 'OSPINA': 506.0, 'POLICARPA': 540.0, 'POTOSI': 560.0, 'PUERRES': 573.0, 'PUPIALES': 585.0, 'ROBERTO PAYAN (SAN JOSE)': 621.0, 'SAMANIEGO': 678.0, 'SAN LORENZO': 687.0, 'SANDONA': 683.0, 'SANTA BARBARA (ISCUANDE)': 696.0, 'SANTA CRUZ (GUACHAVES)': 699.0, 'CUCUTA': 1.0, 'ABREGO': 3.0, 'ARBOLEDAS': 51.0, 'BOCHALEMA': 99.0, 'BUCARASICA': 109.0, 'CACOTA': 125.0, 'CALARCA': 130.0, 'CHINACOTA': 172.0, 'CHITAGA': 174.0, 'CIRCASIA': 190.0, 'CONVENCION': 206.0, 'CUCUTILLA': 223.0, 'EL CARMEN': 245.0, 'EL TARRA': 250.0, 'EL ZULIA': 261.0, 'FILANDIA': 272.0, 'GRAMALOTE': 313.0, 'HERRAN': 347.0, 'LABATECA': 377.0, 'LA PLAYA': 398.0, 'LOS PATIOS': 405.0, 'LOURDES': 418.0, 'MUTISCUA': 480.0, 'OCAÑA': 498.0, 'PAMPLONA': 518.0, 'PAMPLONITA': 520.0, 'RAGONVALIA': 599.0, 'SALAZAR': 660.0, 'SAN CALIXTO': 670.0, 'SANTIAGO': 680.0, 'SAPUYES': 720.0, 'SARDINATA': 720.0, 'SILOS': 743.0, 'TEORAMA': 800.0, 'TIBU': 810.0, 'TUMACO': 835.0, 'VILLACARO': 871.0, 'VILLA DEL ROSARIO': 874.0, 'YACUANQUER': 885.0, 'FLORIDABLANCA': 276.0, 'GALAN': 296.0, 'GAMBITA': 298.0, 'GIRON': 307.0, 'GUACA': 318.0, 'JESUS MARIA': 368.0, 'LA BELLEZA': 377.0, 'LA PAZ': 397.0, 'LOS SANTOS': 418.0, 'MACARAVITA': 425.0, 'MATANZA': 444.0, 'MOGOTES': 464.0, 'MOLAGAVITA': 468.0, 'OCAMONTE': 498.0, 'OIBA': 500.0, 'ONZAGA': 502.0, 'PALMAR': 522.0, 'PALMAS DEL SOCORRO': 524.0, 'PARAMO': 533.0, 'PIEDECUESTA': 547.0, 'PINCHOTE': 549.0, 'PUENTE NACIONAL': 572.0, 'PUERTO PARRA': 573.0, 'PUERTO WILCHES': 575.0, 'SABANA DE TORRES': 655.0, 'SAN BENITO': 673.0, 'SAN GIL': 679.0, 'SAN JOAQUIN': 682.0, 'SAN MIGUEL': 686.0, 'SAN VICENTE DE CHUCURI': 689.0, 'SANTA HELENA DEL OPON': 720.0, 'SIMACOTA': 745.0, 'SOCORRO': 755.0, 'SUCRE': 771.0, 'SURATA': 780.0, 'TONA': 820.0, 'VALLE SAN JOSE': 855.0, 'VELEZ': 861.0, 'IBAGUE': 1.0, 'SINCELEJO': 1.0, 'ALPUJARRA': 24.0, 'ALVARADO': 26.0, 'AMBALEMA': 30.0, 'ARMERO (GUAYABAL)': 55.0, 'CAIMITO': 124.0, 'CAJAMARCA': 124.0, 'CARMEN APICALA': 148.0, 'CASABIANCA': 152.0, 'CHAPARRAL': 168.0, 'COELLO': 200.0, 'COROZAL': 215.0, 'COYAIMA': 217.0, 'CUNDAY': 226.0, 'CHALAN': 230.0, 'GALERAS (NUEVA GRANADA)': 235.0, 'GUARANDA': 265.0, 'ESPINAL': 268.0, 'FLANDES': 275.0, 'FRESNO': 283.0, 'HERVEO': 347.0, 'HONDA': 349.0, 'LERIDA': 408.0, 'LOS PALMITOS': 418.0, 'MAJAGUAL': 429.0, 'MORROA': 473.0, 'OVEJAS': 508.0, 'PALMITO': 523.0, 'SAMPUES': 670.0, 'SAN BENITO ABAD': 678.0, 'SAN JUAN DE BETULIA': 702.0, 'SAN MARCOS': 708.0, 'SAN ONOFRE': 713.0, 'SINCE': 742.0, 'TOLU': 820.0, 'TOLUVIEJO': 823.0, 'VETAS': 867.0, 'ZAPATOCA': 895.0, 'CALI (SANTIAGO DE CALI)': 1.0, 'ALCALA': 20.0, 'ANDALUCIA': 36.0, 'ANSERMANUEVO': 41.0, 'BUENAVENTURA': 109.0, 'BUGA': 111.0, 'BUGALAGRANDE': 113.0, 'CAICEDONIA': 122.0, 'CALIMA (DARIEN)': 126.0, 'CARTAGO': 147.0, 'DAGUA': 233.0, 'EL AGUILA': 243.0, 'EL CAIRO': 246.0, 'EL CERRITO': 248.0, 'EL DOVIO': 250.0, 'FLORIDA': 275.0, 'GINEBRA': 306.0, 'GUACARI': 318.0, 'JAMUNDI': 364.0, 'LA CUMBRE': 377.0, 'LIBANO': 411.0, 'MARIQUITA': 443.0, 'MELGAR': 449.0, 'NATAGAIMA': 483.0, 'ORTEGA': 504.0, 'PALMIRA': 520.0, 'PALOCABILDO': 520.0, 'PIEDRAS': 547.0, 'PLANADAS': 555.0, 'PRADERA': 563.0, 'PRADO': 563.0, 'PURIFICACION': 585.0, 'RIOBLANCO': 616.0, 'RONCESVALLES': 622.0, 'SAN ANTONIO': 675.0, 'SANTA ISABEL': 686.0, 'VALLE DE SAN JUAN': 854.0, 'VENADILLO': 861.0, 'VILLAHERMOSA': 870.0, 'VILLARRICA': 873.0, 'ARAUCA': 1.0, 'MOCOA': 1.0, 'YOPAL': 1.0, 'AGUAZUL': 10.0, 'CHAMEZA': 15.0, 'HATO COROZAL': 125.0, 'LA SALINA': 136.0, 'MONTERREY': 162.0, 'OROCUE': 230.0, 'PAZ DE ARIPORO': 250.0, 'PORE': 263.0, 'RECETOR': 279.0, 'FORTUL': 300.0, 'SACAMA': 315.0, 'ORITO': 320.0, 'TAMARA': 400.0, 'TAURAMENA': 410.0, 'TRINIDAD': 430.0, 'PUERTO ASIS': 568.0, 'PUERTO GUZMAN': 571.0, 'PUERTO LEGUIZAMO': 573.0, 'PUERTO RONDON': 591.0, 'RIOFRIO': 616.0, 'ROLDANILLO': 622.0, 'SARAVENA': 736.0, 'SEVILLA': 736.0, 'TAME': 794.0, 'TORO': 823.0, 'TRUJILLO': 828.0, 'TULUA': 834.0, 'ULLOA': 845.0, 'VERSALLES': 863.0, 'LA HORMIGA (VALLE DEL GUAMUEZ)': 865.0, 'YOTOCO': 890.0, 'YUMBO': 892.0, 'ZARZAL': 895.0, 'LETICIA': 1.0, 'MITU': 1.0, 'PUERTO CARREÑO': 1.0, 'PUERTO INIRIDA': 1.0, 'SAN JOSE DEL GUAVIARE': 1.0, 'CALAMAR': 15.0, 'EL RETORNO': 25.0, 'EL ENCANTO': 263.0, 'LA CHORRERA': 405.0, 'MIRITI-PARANA': 460.0, 'LA PRIMAVERA': 524.0, 'PUERTO NARIÑO': 540.0, 'PROVIDENCIA': 564.0, 'SANTA RITA': 572.0, 'SANTA ROSALIA': 666.0, 'TARAIRA': 666.0, 'PUERTO SANTANDER': 669.0, 'CUMARIBO': 773.0, 'PAPUNAUA (MORICHAL)': 777.0, 'LA GUADALUPE': 885.0, 'VILLAGARZON': 885.0, 'PANA PANA (CAMPO ALEGRE)': 887.0, 'YAVARATE': 889.0, 'MANIZALES': 1.0, 'AGUADAS': 13.0, 'ANSERMA': 42.0, 'ARANZAZU': 50.0, 'BELALCAZAR': 88.0, 'CHINCHINA': 174.0, 'FILADELFIA': 272.0, 'LA DORADA': 380.0, 'LA MERCED': 388.0, 'MANZANARES': 433.0, 'MARMATO': 442.0, 'MARQUETALIA': 444.0, 'NEIRA': 486.0, 'NORCASIA': 495.0, 'PACORA': 513.0, 'PALESTINA': 524.0, 'PENSILVANIA': 541.0, 'RISARALDA': 616.0, 'SAMANA': 662.0, 'SAN JOSE': 665.0, 'SUPIA': 777.0, 'VICTORIA': 867.0, 'VILLAMARIA': 873.0}
# municipio_dict_1 = {1.0: 'MEDELLIN',2.0: 'SANTAFE DE BOGOTA D.C.-CHAPINERO', 4.0: 'SANTAFE DE BOGOTA D.C.-SAN CRISTOBAL', 21.0: 'ALEJANDRIA', 30.0: 'AMBALEMA', 31.0: 'AMALFI', 34.0: 'ANDES', 36.0: 'ANDALUCIA', 38.0: 'ANGOSTURA', 40.0: 'ANOLAIMA', 44.0: 'ANZA', 45.0: 'BECERRIL', 51.0: 'ARBOLEDAS', 55.0: 'ARMERO (GUAYABAL)', 59.0: 'ARMENIA', 79.0: 'BARBACOAS', 88.0: 'BELALCAZAR', 86.0: 'BELTRAN', 91.0: 'BETANIA', 93.0: 'BETULIA', 101.0: 'BOLIVAR', 107.0: 'BRICEÑO', 113.0: 'BUGALAGRANDE', 120.0: 'CABRERA', 125.0: 'HATO COROZAL', 129.0: 'CALDAS', 134.0: 'CAMPAMENTO', 138.0: 'CAÑASGORDAS', 142.0: 'CALOTO', 145.0: 'CARAMANTA', 147.0: 'CARTAGO', 148.0: 'CARMEN APICALA', 150.0: 'CASTILLA LA NUEVA', 154.0: 'CARMEN DE CARUPA', 172.0: 'CHINACOTA', 190.0: 'CIRCASIA', 197.0: 'COCORNA', 206.0: 'CONVENCION', 209.0: 'CONFINES', 212.0: 'CORDOBA', 234.0: 'DABEIBA', 237.0: 'DON MATIAS', 240.0: 'CHACHAGUI', 250.0: 'PAZ DE ARIPORO', 264.0: 'ENCINO', 266.0: 'ENCISO', 282.0: 'FREDONIA', 284.0: 'FRONTINO', 1.0: 'MANIZALES', 585.0: 'PURIFICACION', 13.0: 'AGUADAS', 20.0: 'ALCALA', 75.0: 'BAHIA SOLANO (MUTIS)', 77.0: 'BAJO BAUDO (PIZARRO)', 81.0: 'BARRANCABERMEJA', 92.0: 'BETEITIVA', 121.0: 'CABRERA', 132.0: 'CAMPOALEGRE', 152.0: 'CASABIANCA', 160.0: 'CANTAGALLO', 162.0: 'MONTERREY', 167.0: 'CHARALA', 169.0: 'CHARTA', 170.0: 'CHIVOLO', 176.0: 'CHIQUINQUIRA', 179.0: 'CHIPATA', 207.0: 'CONSACA', 211.0: 'CONTRATACION', 217.0: 'COYAIMA', 229.0: 'CURITI', 235.0: 'GALERAS (NUEVA GRANADA)', 245.0: 'EL CARMEN', 255.0: 'EL PLAYON', 271.0: 'FLORIAN', 302.0: 'GENOVA', 318.0: 'GUACARI', 383.0: 'LA GLORIA', 400.0: 'TAMARA', 401.0: 'LA VICTORIA', 440.0: 'VILLANUEVA', 456.0: 'MISTRATO', 470.0: 'MONTENEGRO', 548.0: 'PIENDAMO', 572.0: 'SANTA RITA', 594.0: 'QUETAME', 682.0: 'SAN JOAQUIN', 687.0: 'SAN LORENZO', 690.0: 'SANTA MARIA', 42.0: 'ANSERMA', 306.0: 'GINEBRA', 308.0: 'GIRARDOTA', 310.0: 'GONZALEZ', 313.0: 'GRAMALOTE', 315.0: 'SACAMA', 321.0: 'GUATAPE', 347.0: 'HERVEO', 353.0: 'HISPANIA', 360.0: 'ITAGUI', 361.0: 'ISTMINA', 364.0: 'JAMUNDI', 368.0: 'JESUS MARIA', 376.0: 'LA CEJA', 380.0: 'LA DORADA', 390.0: 'LA TOLA', 411.0: 'LIBANO', 425.0: 'MACARAVITA', 467.0: 'MONTEBELLO', 475.0: 'MURINDO', 480.0: 'MUTISCUA', 483.0: 'NATAGAIMA', 495.0: 'NORCASIA', 490.0: 'OLAYA HERRERA (BOCAS DE SATINGA)', 501.0: 'OLAYA', 541.0: 'PENSILVANIA', 543.0: 'PEQUE', 576.0: 'PUEBLORRICO', 579.0: 'PUERTO BERRIO', 591.0: 'PUERTO RONDON', 604.0: 'REMEDIOS', 607.0: 'RETIRO', 615.0: 'RIONEGRO', 628.0: 'SABANALARGA', 631.0: 'SABANETA', 642.0: 'SALGAR', 647.0: 'SAN ESTANISLAO', 649.0: 'SAN BERNARDO', 652.0: 'SAN FRANCISCO', 656.0: 'SAN JERONIMO', 658.0: 'SAN FRANCISCO', 659.0: 'SAN JUAN DE URABA', 660.0: 'SALAZAR', 664.0: 'SAN JOSE DE PARE', 665.0: 'SAN JOSE', 667.0: 'SAN LUIS DE GACENO', 670.0: 'SAN PEDRO', 674.0: 'SAN VICENTE', 679.0: 'SAN GIL', 686.0: 'SANTA ISABEL', 697.0: 'SANTUARIO', 736.0: 'SEVILLA', 756.0: 'SOLANO', 761.0: 'SOMONDOCO', 789.0: 'TAMESIS', 790.0: 'TASCO', 792.0: 'TARSO', 809.0: 'TIMBIQUI', 819.0: 'TOLEDO', 837.0: 'TUTA', 842.0: 'UMBITA', 847.0: 'URIBIA', 854.0: 'VALLE DE SAN JUAN', 856.0: 'VALPARAISO', 858.0: 'VEGACHI', 861.0: 'VENADILLO', 873.0: 'VILLAMARIA', 885.0: 'VILLAGARZON', 887.0: 'PANA PANA (CAMPO ALEGRE)', 890.0: 'YOTOCO', 893.0: 'YONDO', 895.0: 'ZARZAL', 78.0: 'BARRANCAS', 137.0: 'CALDONO', 141.0: 'CANDELARIA', 296.0: 'GALAN', 372.0: 'JURADO', 421.0: 'LURUACO', 433.0: 'MANZANARES', 436.0: 'MANTA', 520.0: 'PALOCABILDO', 549.0: 'PINCHOTE', 558.0: 'POLO NUEVO', 560.0: 'POTOSI', 573.0: 'PUERTO LEGUIZAMO', 606.0: 'RESTREPO', 634.0: 'SABANAGRANDE', 638.0: 'SACHICA', 675.0: 'SAN ANTONIO', 685.0: 'SAN BERNARDO', 758.0: 'SOPO', 770.0: 'SUAREZ', 832.0: 'TUNUNGUA', 849.0: 'USIACURI', 6.0: 'ACACIAS', 52.0: 'ARJONA', 62.0: 'ARROYOHONDO', 74.0: 'BARRANCO DE LOBA', 140.0: 'CALAMAR', 188.0: 'CICUCO', 222.0: 'CLEMENCIA', 244.0: 'EL COCUY', 248.0: 'EL CERRITO', 268.0: 'ESPINAL', 300.0: 'SABANALARGA', 430.0: 'LA VICTORIA', 442.0: 'MARMATO', 458.0: 'MONTECRISTO', 468.0: 'MOLAGAVITA', 473.0: 'MORROA', 580.0: 'PUERTO LIBERTADOR', 600.0: 'RIOQUITO', 620.0: 'SAN CRISTOBAL', 650.0: 'SAN JUAN DEL CESAR', 654.0: 'SAN JACINTO', 655.0: 'SABANA DE TORRES', 657.0: 'SAN JUAN NEPOMUCENO', 673.0: 'SAN BENITO', 683.0: 'SANDONA', 688.0: 'SANTA ROSA DEL SUR', 744.0: 'SIMITI', 760.0: 'SAN JOSE DE OCUNE', 780.0: 'SURATA', 810.0: 'TIBU', 836.0: 'TURBACO', 838.0: 'TUQUERRES', 894.0: 'ZAMBRANO', 3.0: 'ABREGO', 5.0: 'SANTAFE DE BOGOTA D.C.-USME', 7.0: 'SANTAFE DE BOGOTA D.C.-BOSA', 8.0: 'SANTAFE DE BOGOTA D.C.-KENNEDY', 9.0: 'SANTAFE DE BOGOTA D.C.-FONTIBON', 10.0: 'AGUAZUL', 11.0: 'AGUACHICA', 12.0: 'SANTAFE DE BOGOTA D.C.-BARRIOS UNIDOS', 14.0: 'SANTAFE DE BOGOTA D.C.-MARTIRES', 15.0: 'CALAMAR', 16.0: 'AIPE', 17.0: 'SANTAFE DE BOGOTA D.C.-CANDELARIA', 18.0: 'SANTAFE DE BOGOTA D.C.-RAFAEL URIBE', 19.0: 'ALBAN (SAN JOSE)', 35.0: 'ANAPOIMA', 53.0: 'ARACATACA', 95.0: 'BITUIMA', 99.0: 'BOCHALEMA', 123.0: 'CACHIPAY', 126.0: 'CALIMA (DARIEN)', 151.0: 'CAQUEZA', 168.0: 'CHAPARRAL', 175.0: 'CHIMICHAGUA', 178.0: 'CHIRIGUANA', 181.0: 'CHOACHI', 183.0: 'CHITA', 200.0: 'MIRAFLORES', 214.0: 'COTA', 224.0: 'CUASPUD (CARLOSAMA)', 258.0: 'EL TABLON', 260.0: 'EL TAMBO', 269.0: 'FACATATIVA', 279.0: 'RECETOR', 281.0: 'FOSCA', 286.0: 'FUNZA', 288.0: 'FUNDACION', 290.0: 'FLORENCIA', 293.0: 'GACHANTIVA', 295.0: 'GAMARRA', 297.0: 'GACHETA', 299.0: 'GARAGOA', 307.0: 'GIRON', 312.0: 'GRANADA', 317.0: 'GUACHUCAL', 320.0: 'ORITO', 322.0: 'GUAPOTA', 324.0: 'GUAVATA', 326.0: 'GUATAVITA', 328.0: 'GUAYABAL DE SIQUIMA', 335.0: 'GUAYABETAL', 339.0: 'GUTIERREZ', 377.0: 'LA CUMBRE', 386.0: 'LA MESA', 394.0: 'LA PALMA', 398.0: 'LA PLAYA', 402.0: 'LA VEGA', 407.0: 'LA PEDRERA', 426.0: 'MACHETA', 438.0: 'MEDINA', 486.0: 'NEIRA', 488.0: 'NILO', 489.0: 'NIMAIMA', 491.0: 'NOVITA', 599.0: 'RAGONVALIA', 513.0: 'PACORA', 518.0: 'PAMPLONA', 524.0: 'PALESTINA', 530.0: 'PUERTO ALEGRIA', 535.0: 'PASCA', 592.0: 'PUERTO RICO', 596.0: 'QUIPILE', 612.0: 'RICAURTE', 645.0: 'SAN ANTONIO DEL TEQUENDAMA', 653.0: 'SALAMINA', 662.0: 'SAMANA', 718.0: 'SASAIMA', 740.0: 'SIACHOQUE', 743.0: 'SILOS', 745.0: 'SIMACOTA', 754.0: 'SOACHA', 769.0: 'SUBACHOQUE', 772.0: 'SUESCA', 777.0: 'SUPIA', 779.0: 'SUSA', 781.0: 'SUTATAUSA', 785.0: 'SOLITA', 793.0: 'TAUSA', 797.0: 'TESALIA', 799.0: 'TELLO', 805.0: 'TIBACUY', 807.0: 'TIERRALTA', 815.0: 'TOCAIMA', 817.0: 'TOCANCIPA', 823.0: 'TORO', 839.0: 'TUTASA', 841.0: 'UBAQUE', 843.0: 'UBATE', 845.0: 'ULLOA', 851.0: 'UTICA', 506.0: 'OSPINA', 862.0: 'VERGARA', 867.0: 'VICTORIA', 871.0: 'VILLACARO', 875.0: 'VILLETA', 878.0: 'VIOTA', 26.0: 'ALVARADO', 298.0: 'GAMBITA', 319.0: 'GUAMO', 349.0: 'HONDA', 357.0: 'IQUIRA', 359.0: 'ISNOS (SAN JOSE DE ISNOS)', 378.0: 'LA CRUZ', 396.0: 'LA PLATA', 898.0: 'ZIPACON', 899.0: 'ZIPAQUIRA', 503.0: 'OPORAPA', 551.0: 'PIVIJAY', 668.0: 'SAN AGUSTIN', 676.0: 'SAN MIGUEL DE SEMA', 791.0: 'TARQUI', 801.0: 'TERUEL', 872.0: 'VILLANUEVA', 22.0: 'ALDANA', 47.0: 'AQUITANIA', 87.0: 'BELEN', 90.0: 'DIBULLA', 97.0: 'BOAVITA', 104.0: 'BOYACA', 106.0: 'BRICEÑO', 109.0: 'BUENAVENTURA', 114.0: 'BUSBANZA', 131.0: 'CALDAS', 135.0: 'CANTON DE SAN PABLO (MANAGRU)', 232.0: 'CHIQUIZA', 180.0: 'CHISCAS', 185.0: 'CHITARAQUE', 187.0: 'CHIVATA', 236.0: 'DOLORES', 189.0: 'CIENAGA', 204.0: 'COLOSO (RICAURTE)', 215.0: 'COROZAL', 218.0: 'COVARACHIA', 223.0: 'CUCUTILLA', 226.0: 'CUNDAY', 238.0: 'EL COPEY', 272.0: 'FILADELFIA', 276.0: 'FLORIDABLANCA', 325.0: 'SAN LUIS DE PALENQUE', 332.0: 'GUICAN', 362.0: 'IZA', 367.0: 'JENESANO', 403.0: 'LA VICTORIA', 455.0: 'MIRANDA', 464.0: 'MOGOTES', 466.0: 'MONTELIBANO', 469.0: 'MONIQUIRA', 476.0: 'MOTAVITA', 494.0: 'NUEVO COLON', 500.0: 'OIBA', 507.0: 'OTANCHE', 511.0: 'PACOA', 514.0: 'PAEZ', 516.0: 'PAIPA', 522.0: 'PALMAR', 531.0: 'PAUNA', 533.0: 'PARAMO', 537.0: 'PAZ DEL RIO', 542.0: 'PESCA', 550.0: 'PELAYA', 621.0: 'ROBERTO PAYAN (SAN JOSE)', 632.0: 'SABOYA', 646.0: 'SAMACA', 681.0: 'SAN PABLO DE BORBUR', 693.0: 'SAN PABLO', 696.0: 'SANTA BARBARA (ISCUANDE)', 720.0: 'SANTA HELENA DEL OPON', 723.0: 'SATIVASUR', 753.0: 'SAN VICENTE DEL CAGUAN', 757.0: 'SAN MIGUEL (LA DORADA)', 755.0: 'SAN FRANCISCO', 759.0: 'SOGAMOSO', 762.0: 'SORA', 764.0: 'SORACA', 763.0: 'SOTAQUIRA', 774.0: 'SUSACON', 776.0: 'SUTAMARCHAN', 778.0: 'SUTATENZA', 798.0: 'TARAPACA', 804.0: 'TIBANA', 806.0: 'TIBASOSA', 808.0: 'TINJACA', 814.0: 'TOCA', 816.0: 'TOGUI', 820.0: 'TOLU', 822.0: 'TOTA', 835.0: 'TUMACO', 29.0: 'ALBANIA', 50.0: 'ARANZAZU', 94.0: 'BELEN DE LOS ANDAQUIES', 205.0: 'CONCORDIA', 247.0: 'EL DONCELLO', 256.0: 'EL ROSARIO', 410.0: 'TAURAMENA', 460.0: 'MIRITI-PARANA', 479.0: 'MORELIA', 610.0: 'SAN JOSE DE FRAGUA', 860.0: 'VALPARAISO', 879.0: 'VIRACACHA', 897.0: 'ZETAQUIRA', 32.0: 'ASTREA', 60.0: 'BOSCONIA', 100.0: 'BOLIVAR', 110.0: 'BUENAVISTA', 130.0: 'CANDELARIA', 228.0: 'CURUMANI', 355.0: 'INZA', 392.0: 'LA SIERRA', 397.0: 'LA PAZ', 418.0: 'LOS PALMITOS', 450.0: 'PUERTO CONCORDIA', 517.0: 'PAILITAS', 532.0: 'PATIA (EL BORDO)', 622.0: 'ROLDANILLO', 698.0: 'SANTANDER DE QUILICHAO', 701.0: 'SANTA ROSA', 821.0: 'TORIBIO', 824.0: 'TOTORO', 68.0: 'AYAPEL', 182.0: 'CHINU', 350.0: 'LA MACARENA', 417.0: 'LORICA', 419.0: 'LOS CORDOBAS', 443.0: 'MARIQUITA', 555.0: 'PLANADAS', 570.0: 'PUEBLOVIEJO', 574.0: 'PUERTO ESCONDIDO', 586.0: 'PURISIMA', 614.0: 'RIOSUCIO', 672.0: 'SAN ANTERO', 678.0: 'SAN LUIS', 710.0: 'SAN ALBERTO', 750.0: 'SAN DIEGO', 787.0: 'TADO', 855.0: 'VALLE SAN JOSE', 25.0: 'EL RETORNO', 73.0: 'BAGADO', 413.0: 'LLORO', 800.0: 'TEORAMA', 58.0: 'ARIGUANI (EL DIFICIL)', 98.0: 'DISTRACCION', 161.0: 'CARURU', 420.0: 'LA JAGUA DEL PILAR', 545.0: 'PIJIÑO DEL CARMEN (PIJIÑO)', 874.0: 'VILLA DEL ROSARIO', 83.0: 'BELEN', 124.0: 'CAJAMARCA', 203.0: 'COLON (GENOVA)', 251.0: 'EL CASTILLO', 270.0: 'FALAN', 287.0: 'FUNES', 330.0: 'MESETAS', 370.0: 'JORDAN', 568.0: 'PUERTO ASIS', 577.0: 'PUERTO LLERAS', 590.0: 'PUERTO RICO', 605.0: 'REMOLINO', 680.0: 'SANTIAGO', 689.0: 'SAN VICENTE DE CHUCURI', 692.0: 'SAN SEBASTIAN DE BUENAVISTA', 703.0: 'SAN ZENON', 707.0: 'SANTA ANA', 711.0: 'VISTAHERMOSA', 210.0: 'CONTADERO', 227.0: 'CUMBAL', 233.0: 'DAGUA', 254.0: 'EL PEÑOL', 323.0: 'GUALMATAN', 352.0: 'ICONONZO', 354.0: 'IMUES', 356.0: 'IPIALES', 381.0: 'LA FLORIDA', 385.0: 'LANDAZURI', 399.0: 'LA UNION', 405.0: 'LA CHORRERA', 427.0: 'MAGUI (PAYAN)', 435.0: 'MALLAMA (PIEDRANCHA)', 540.0: 'PUERTO NARIÑO', 565.0: 'PROVIDENCIA', 694.0: 'SAN PEDRO DE CARTAGO', 699.0: 'SANTA CRUZ (GUACHAVES)', 111.0: 'BUGA', 128.0: 'CACHIRA', 174.0: 'CHINCHINA', 239.0: 'DURANIA', 261.0: 'EL ZULIA', 344.0: 'HATO', 498.0: 'OCAMONTE', 553.0: 'PUERTO SANTANDER', 786.0: 'TAMINANGO', 788.0: 'TANGUA', 327.0: 'GUEPSA', 406.0: 'LEBRIJA', 432.0: 'MALAGA', 444.0: 'MARQUETALIA', 502.0: 'ONZAGA', 547.0: 'PIEDRAS', 575.0: 'PUERTO WILCHES', 669.0: 'PUERTO SANTANDER', 684.0: 'SAN JOSE DE MIRANDA', 705.0: 'SANTA BARBARA', 773.0: 'CUMARIBO', 24.0: 'ALPUJARRA', 43.0: 'ANZOATEGUI', 67.0: 'ATACO', 230.0: 'OROCUE', 265.0: 'GUARANDA', 275.0: 'FLORIDA', 283.0: 'FRESNO', 408.0: 'LERIDA', 429.0: 'MAJAGUAL', 508.0: 'OVEJAS', 523.0: 'PALMITO', 702.0: 'SAN JUAN DE BETULIA', 708.0: 'SAN MARCOS', 713.0: 'SAN ONOFRE', 717.0: 'SAN PEDRO', 742.0: 'SINCE', 771.0: 'SUCRE', 41.0: 'ANSERMANUEVO', 54.0: 'ARGELIA', 122.0: 'CAICEDONIA', 243.0: 'EL AGUILA', 246.0: 'EL CAIRO', 449.0: 'MELGAR', 461.0: 'MURILLO', 497.0: 'OBANDO', 504.0: 'ORTEGA', 563.0: 'PRADO', 616.0: 'RISARALDA', 624.0: 'ROVIRA', 671.0: 'SALDAÑA', 870.0: 'VILLAHERMOSA', 65.0: 'ARAUQUITA', 136.0: 'LA SALINA', 139.0: 'MANI', 219.0: 'COLON', 220.0: 'CRAVO NORTE', 225.0: 'NUNCHIA', 263.0: 'EL ENCANTO', 569.0: 'PUERTO CAICEDO', 571.0: 'PUERTO GUZMAN', 749.0: 'SIBUNDOY', 794.0: 'TAME', 828.0: 'TRUJILLO', 834.0: 'TULUA', 863.0: 'VERSALLES', 865.0: 'LA HORMIGA (VALLE DEL GUAMUEZ)', 869.0: 'VIJES', 892.0: 'YUMBO', 343.0: 'BARRANCO MINAS', 536.0: 'PUERTO ARICA', 564.0: 'PROVIDENCIA', 666.0: 'TARAIRA', 883.0: 'SAN FELIPE', 884.0: 'PUERTO COLOMBIA', 886.0: 'CACAHUAL', 888.0: 'MORICHAL (MORICHAL NUEVO)', 889.0: 'YAVARATE', 388.0: 'LA MERCED', 446.0: 'MARULANDA', 877.0: 'VITERBO'}
# # Ordenar el diccionario por los valores
# municipio_dict = dict(sorted(municipio_dict_1.items(), key=lambda item: item[1]))

# mapeo tipo usuario
tipo_usuario_map = {1:"Contributivo", 2:"Subsidiado", 3: "Vinculado", 4:"Particular", 5:"Otro", 6:"Víctima con afiliación al Régimen Contributivo",
                    7:"Víctima con afiliación al Régimen subsidiado", 8:"Víctima no asegurado (Vinculado)"}

# mapeo dia semana
dia_semana_map = {"Lunes": 2, "Martes": 3, "Miércoles": 4, "Jueves": 1, "Viernes": 6, "Sábado": 5, "Domingo": 0}

# mapeo sexo
sexo_map = {1:"Masculino", 0:"Femenino"}  # Asume valores 'M' y 'F' para Masculino y Femenino

causa_externa_map = {1:"Accidente de trabajo", 2:"Accidente de tránsito", 3:"Accidente rábico", 4:"Accidente ofídico",
                     5:"Otro tipo de accidente", 6:"Evento catastrófico", 7:"Lesión por agresión", 8:"Lesión auto infligida",
                     9:"Sospecha de maltrato físico", 10:"Sospecha de abuso sexual", 11:"Sospecha de violencia sexual",
                     12:"Sospecha de maltrato emocional", 13:"Enfermedad general", 14:"Enfermedad laboral", 15: "Otra"}

# Cargar el modelo
with open("lgb_model_early_stop_2.pkl", "rb") as file:
    model = pickle.load(file)

# # Cargar el modelo
# with open("C:/Users/Johan/Documents/entornos_python/.Estandar2024/TFM/lgb_model_early_stop_2.pkl", "rb") as file:
#     model = pickle.load(file)

# Crear dos columnas para organizar el logo y el título
t1, t2 = st.columns([1, 5])  # Ajusta la proporción según sea necesario

# Coloca la imagen en la columna de la derecha
with t1:
    st.image("logo.png", width=120)

# with t1:
#     st.image("C:/Users/Johan/Documents/entornos_python/.Estandar2024/TFM/logo.png", width=120)

# Coloca el título en la columna de la izquierda
with t2:
    st.markdown("""
    <h1 style='text-align: left; margin-top: -20px;'>Predicción Destino del Paciente en Urgencias</h1>
    <p style='text-align: left; margin-top: -10px;'>Introduce los datos del paciente para realizar la predicción.</p>
    """, unsafe_allow_html=True)

########################################################################################################

# Configurar valores iniciales en session_state
if "nombre_paciente" not in st.session_state:
    st.session_state["nombre_paciente"] = ""
if "apellido" not in st.session_state:
    st.session_state["apellido"] = ""
# Crear columnas para organizar los campos
col1, col2 = st.columns(2)

with col1:
    st.session_state["nombre_paciente"] = st.text_input(
        "Nombre del paciente", value=st.session_state["nombre_paciente"]
    )
nombre_paciente = st.session_state["nombre_paciente"]

# Campo de texto para el apellido en la segunda columna
with col2:
    st.session_state["apellido"] = st.text_input(
        "Apellido del paciente", value=st.session_state["apellido"]
    )
apellido = st.session_state["apellido"]

########################################################################################################

############################################################################################################################

# Crear entradas para las variables

# Crear columnas para organizar los campos
col3, col4 = st.columns(2)
# Selector de fecha
with col3:
    fecha = st.date_input("Fecha de ingreso", value=datetime.now().date())
    Mes = fecha.month
    Dia_del_mes = fecha.day

# Selector de hora
with col4:
    hora = st.time_input("Hora de ingreso")
    HoraIngreso = hora.hour

#Selector día de la semana
# Obtener el día de la semana en español
dias_semana = {
    "Monday": "Lunes",
    "Tuesday": "Martes",
    "Wednesday": "Miércoles",
    "Thursday": "Jueves",
    "Friday": "Viernes",
    "Saturday": "Sábado",
    "Sunday": "Domingo"
}

# Convertir fecha a día de la semana en español
Dia_de_la_semana_nombre = dias_semana[pd.Timestamp(fecha).day_name()]

# Mapear el día de la semana al número según el diccionario
Dia_de_la_semana = dia_semana_map[Dia_de_la_semana_nombre]


######################################################################################

if "Edad" not in st.session_state:
    st.session_state["Edad"] = ""

# Crear columnas para organizar los campos
col5, col6 = st.columns(2)

with col5:
# Ingresar Edad
    st.session_state["Edad"] = st.text_input(
    "Edad (años)", value=st.session_state["Edad"]
    )
    Edad = st.session_state["Edad"]

    try:
        Edad = int(Edad)
            # Edad = st.number_input("Edad (años)", min_value=0, max_value=120)
        if Edad < 12:
            Grupo_etario = 3
        elif 12 <= Edad < 18:
            Grupo_etario = 0
        elif 18 <= Edad < 60:
            Grupo_etario = 1
        else:
            Grupo_etario = 2
    except:
        st.warning("Por favor, introduce una edad válida (un número entero).")
############################################################################################################################

# if "Sexo" not in st.session_state:
#     st.session_state["Sexo"] = ""

with col6:
    
#     # Crear las opciones del selector
#     options = ["Seleccione el sexo del paciente"] + list(sexo_map.values())
#     sexo_seleccionado = st.selectbox(
#         "Sexo",
#         options=options
#     )

#     # Inicializar codigo_sexo como None
#     codigo_sexo = None

#     # Validar si el usuario seleccionó una opción válida
#     if sexo_seleccionado != "Seleccione el sexo del paciente":
#         # Buscar el código correspondiente al sexo seleccionado
#         for codigo, nombre in sexo_map.items():
#             if nombre == sexo_seleccionado:
#                 codigo_sexo = codigo
#                 break


########

    # Inicializar el valor del sexo seleccionado en session_state
    if "sexo_seleccionado" not in st.session_state:
        st.session_state["sexo_seleccionado"] = "Seleccione el sexo del paciente"

    # Crear las opciones del selector
    options = ["Seleccione el sexo del paciente"] + list(sexo_map.values())

    # Selector con estado gestionado
    st.session_state["sexo_seleccionado"] = st.selectbox(
        "Sexo",
        options=options,
        index=options.index(st.session_state["sexo_seleccionado"]),
    )

    # Obtener el sexo seleccionado desde session_state
    sexo_seleccionado = st.session_state["sexo_seleccionado"]

    # Inicializar codigo_sexo como None
    codigo_sexo = None

    # Validar si el usuario seleccionó una opción válida
    if sexo_seleccionado != "Seleccione el sexo del paciente":
        # Buscar el código correspondiente al sexo seleccionado
        for codigo, nombre in sexo_map.items():
            if nombre == sexo_seleccionado:
                codigo_sexo = codigo
                break
    
        # Mostrar el resultado (opcional)
    if codigo_sexo is not None:
        st.success(f"Sexo seleccionado correctamente")
    else:
        st.warning("Por favor, selecciona una opción válida.")


############################################################################################################################


# # Crear una lista desplegable con solo las claves (nombres de los municipios)
# options = ["Seleccione un municipio"] + list(municipio_dict_1.keys())
# municipio_seleccionado = st.selectbox(
#     "Nombre del municipio donde reside",
#     options=options
# )

# # Verificar si el usuario seleccionó una opción válida
# if municipio_seleccionado == "Seleccione un municipio":
#     st.warning("Por favor, seleccione un municipio válido.")
# else:
#     # Obtener el código del municipio seleccionado usando el diccionario
#     CodigoMunicipio = municipio_dict_1[municipio_seleccionado]
#     st.success(f"Municipio seleccionado correctamente")

# Inicializar el valor de municipio_seleccionado en session_state
if "municipio_seleccionado" not in st.session_state:
    st.session_state["municipio_seleccionado"] = "Seleccione un municipio"

# Crear una lista desplegable con solo las claves (nombres de los municipios)
options = ["Seleccione un municipio"] + list(municipio_dict_1.keys())

# Selector con estado gestionado
st.session_state["municipio_seleccionado"] = st.selectbox(
    "Nombre del municipio donde reside",
    options=options,
    index=options.index(st.session_state["municipio_seleccionado"]),
)

# Obtener el municipio seleccionado desde session_state
municipio_seleccionado = st.session_state["municipio_seleccionado"]

# Verificar si el usuario seleccionó una opción válida
if municipio_seleccionado == "Seleccione un municipio":
    st.warning("Por favor, seleccione un municipio válido.")
else:
    # Obtener el código del municipio seleccionado usando el diccionario
    CodigoMunicipio = municipio_dict_1[municipio_seleccionado]
    st.success(f"Municipio seleccionado correctamente")


############################################################################################################################
col7, col8 = st.columns(2)
with col7:
    # # Crear una lista desplegable con un mensaje inicial
    # options = ["Seleccione una opción"] + list(tipo_usuario_map.values())
    # tipo_seleccionado = st.selectbox(
    #     "Tipo de aseguramiento",
    #     options=options
    # )

    # # Verificar si el usuario seleccionó una opción válida
    # if tipo_seleccionado == "Seleccione una opción":
    #     st.warning("Por favor, seleccione una opción válida.")
    # else:
    #     # Obtener el código del prestador seleccionado
    #     codigo_tipo_usuario = [codigo for codigo, nombre in tipo_usuario_map.items() if nombre == tipo_seleccionado][0]
    #     st.success(f"Opción seleccionada correctamente")

    # Inicializar el valor de tipo_seleccionado en session_state
    if "tipo_seleccionado" not in st.session_state:
        st.session_state["tipo_seleccionado"] = "Seleccione una opción"

    # Crear una lista desplegable con un mensaje inicial
    options = ["Seleccione una opción"] + list(tipo_usuario_map.values())

    # Selector con estado gestionado
    st.session_state["tipo_seleccionado"] = st.selectbox(
        "Tipo de aseguramiento",
        options=options,
        index=options.index(st.session_state["tipo_seleccionado"]),
    )

    # Obtener el tipo de aseguramiento seleccionado desde session_state
    tipo_seleccionado = st.session_state["tipo_seleccionado"]

    # Validar si el usuario seleccionó una opción válida
    if tipo_seleccionado == "Seleccione una opción":
        st.warning("Por favor, seleccione una opción válida.")
    else:
        # Obtener el código correspondiente al tipo de aseguramiento
        codigo_tipo_usuario = [
            codigo for codigo, nombre in tipo_usuario_map.items() if nombre == tipo_seleccionado
        ][0]
        st.success(f"Opción seleccionada correctamente")



#############################################################################################################################
# with col8:
#     options = ["Seleccione una causa externa"] + list(causa_externa_map.values())
#     causa_externa_seleccionada = st.selectbox(
#         "Motivo de ingreso a urgencias",
#         options=options
#     )

#     # Verificar si el usuario seleccionó una opción válida
#     if causa_externa_seleccionada == "Seleccione un motivo":
#         st.warning("Por favor, seleccione un motivo válido.")
#     else:
#         # Validar si el motivo seleccionado existe en el diccionario
#         codigo_causa_externa = None
#         for codigo, nombre in causa_externa_map.items():
#             if nombre == causa_externa_seleccionada:
#                 codigo_causa_externa = codigo
#                 break

#         if codigo_causa_externa is not None:
#             st.success(f"Motivo seleccionado correctamente")
#         else:
#             st.warning("Por favor, selecione una opción válida")

with col8:
    # Inicializar el valor de causa_externa_seleccionada en session_state
    if "causa_externa_seleccionada" not in st.session_state:
        st.session_state["causa_externa_seleccionada"] = "Seleccione una causa externa"

    # Crear una lista desplegable con las opciones
    options = ["Seleccione una causa externa"] + list(causa_externa_map.values())

    # Selector con estado gestionado
    st.session_state["causa_externa_seleccionada"] = st.selectbox(
        "Motivo de ingreso a urgencias",
        options=options,
        index=options.index(st.session_state["causa_externa_seleccionada"]),
    )

    # Obtener la causa externa seleccionada desde session_state
    causa_externa_seleccionada = st.session_state["causa_externa_seleccionada"]

    # Validar si el usuario seleccionó una opción válida
    if causa_externa_seleccionada == "Seleccione una causa externa":
        st.warning("Por favor, seleccione un motivo válido.")
    else:
        # Obtener el código de la causa externa desde el diccionario
        codigo_causa_externa = None
        for codigo, nombre in causa_externa_map.items():
            if nombre == causa_externa_seleccionada:
                codigo_causa_externa = codigo
                break

        # Validar si se encontró un código válido
        if codigo_causa_externa is not None:
            st.success(f"Motivo seleccionado correctamente")
        else:
            st.warning("Por favor, seleccione una opción válida.")


############################################################################################################################

# Inicializar el valor de prestador_seleccionado en session_state

# # Crear una lista desplegable con un mensaje inicial
# options = ["Seleccione una IPS"] + list(prestadores_dict.values())
# prestador_seleccionado = st.selectbox(
#     "Nombre del Prestador (Institución que atiende el paciente)",
#     options=options
# )

# # Verificar si el usuario seleccionó una opción válida
# if prestador_seleccionado == "Seleccione una IPS":
#     st.warning("Por favor, seleccione una IPS válida.")
# else:
#     # Obtener el código del prestador seleccionado
#     CodigoPrestador = [codigo for codigo, nombre in prestadores_dict.items() if nombre == prestador_seleccionado][0]
#     st.success(f"Prestador seleccionado correctamente")

if "prestador_seleccionado" not in st.session_state:
    st.session_state["prestador_seleccionado"] = "Seleccione una IPS"

# Crear una lista desplegable con un mensaje inicial
options = ["Seleccione una IPS"] + list(prestadores_dict.values())

# Selector con estado gestionado
st.session_state["prestador_seleccionado"] = st.selectbox(
    "Nombre del Prestador (Institución que atiende el paciente)",
    options=options,
    index=options.index(st.session_state["prestador_seleccionado"]),
)

# Obtener el prestador seleccionado desde session_state
prestador_seleccionado = st.session_state["prestador_seleccionado"]

# Validar si el usuario seleccionó una opción válida
if prestador_seleccionado == "Seleccione una IPS":
    st.warning("Por favor, seleccione una IPS válida.")
else:
    # Obtener el código del prestador seleccionado
    CodigoPrestador = [
        codigo for codigo, nombre in prestadores_dict.items() if nombre == prestador_seleccionado
    ][0]
    st.success(f"Prestador seleccionado correctamente.")



############################################################################################################################

# # Crear una lista desplegable con un mensaje inicial
# options = ["Seleccione una EPS o Aseguradora"] + list(eps_dict.values())
# eps_seleccionada = st.selectbox(
#     "Nombre de la EPS o Aseguradora",
#     options=options
# )

# # Verificar si el usuario seleccionó una opción válida
# if eps_seleccionada == "Seleccione una EPS o Aseguradora":
#     st.warning("Por favor, seleccione una EPS o Aseguradora válida.")
# else:
#     # Obtener el código del prestador seleccionado
#     codigoEPS = [codigo for codigo, nombre in eps_dict.items() if nombre == eps_seleccionada][0]
#     st.success(f"EPS o Aseguradora seleccionada correctamente")

# Inicializar el valor de eps_seleccionada en session_state
if "eps_seleccionada" not in st.session_state:
    st.session_state["eps_seleccionada"] = "Seleccione una EPS o Aseguradora"

# Crear una lista desplegable con un mensaje inicial
options = ["Seleccione una EPS o Aseguradora"] + list(eps_dict.values())

# Selector con estado gestionado
st.session_state["eps_seleccionada"] = st.selectbox(
    "Nombre de la EPS o Aseguradora",
    options=options,
    index=options.index(st.session_state["eps_seleccionada"]),
)

# Obtener la EPS seleccionada desde session_state
eps_seleccionada = st.session_state["eps_seleccionada"]

# Validar si el usuario seleccionó una opción válida
if eps_seleccionada == "Seleccione una EPS o Aseguradora":
    st.warning("Por favor, seleccione una EPS o Aseguradora válida.")
else:
    # Obtener el código de la EPS seleccionada
    codigoEPS = [
        codigo for codigo, nombre in eps_dict.items() if nombre == eps_seleccionada
    ][0]
    st.success(f"EPS o Aseguradora seleccionada correctamente.")


############################################################################################################################



# Hora de ingreso

if 0 <= HoraIngreso < 6:
    Rango_horario_ingreso = 0 #"Madrugada"
elif 6 <= HoraIngreso < 12:
    Rango_horario_ingreso = 1 #"Mañana"
elif 12 <= HoraIngreso < 18:
    Rango_horario_ingreso = 3 #"Tarde"
else:
    Rango_horario_ingreso = 2 #"Noche"

############################################################################################################################

# Botón para predecir
bot1, bot2 = st.columns([1,1])

with bot1:
    if st.button("Predecir"):

        try:
            # Procesar las variables que requieren conversión
            CodigoPrestador = int(CodigoPrestador)
            HoraIngreso = int(HoraIngreso)
            Edad = int(Edad)
            Dia_del_mes = int(Dia_del_mes)
            Mes = int(Mes)
            CodigoMunicipio = int(CodigoMunicipio)
            CausaExterna = int(codigo_causa_externa)
            Grupo_etario = int(Grupo_etario)
            Rango_horario_ingreso = int(Rango_horario_ingreso)
            codigoEPS = int(codigoEPS)
            TipoUsuario = int(codigo_tipo_usuario)
            Dia_de_la_semana = int(Dia_de_la_semana)

            # Convertir variables categóricas
            # TipoUsuario = tipo_usuario_map.get(codigo_tipo_usuario, 0)  # Valor por defecto 0 si no se encuentra
            # Dia_de_la_semana = dia_semana_map.get(Dia_del_mes, 0)
            Sexo = int(codigo_sexo)

            # Asume que otras variables categóricas ya están codificadas o agrega mapeos adicionales

            # Procesar HoraIngreso (convertir a número entero de horas)
            # HoraIngreso_horas = int(HoraIngreso.split(":")[0]) if ":" in HoraIngreso else 0

            # Crear un DataFrame con los datos procesados
            input_data = pd.DataFrame({
                "CodigoPrestador": [CodigoPrestador],
                "Edad": [Edad],
                "Día del mes": [Dia_del_mes],
                "Nombre asegurador": [codigoEPS],  # Asume 0 como placeholder (requiere codificación real)
                "HoraIngreso": [HoraIngreso],
                "Mes": [Mes],
                "TipoUsuario": [TipoUsuario],
                "Día de la semana": [Dia_de_la_semana],
                "CódigoMunicipio": [CodigoMunicipio],
                "CausaExterna": [CausaExterna],  # Asume 0 como placeholder
                "Grupo etario": [Grupo_etario],  # Asume 0 como placeholder
                "Rango horario ingreso": [Rango_horario_ingreso],  # Asume 0 como placeholder
                "Sexo": [Sexo]
            })

            print(f"Corecta ejecución paciente {nombre_paciente} {apellido}")
            # print(CodigoPrestador)
            # print(Edad)
            # print(Dia_del_mes)
            # print(codigoEPS)
            # print(HoraIngreso)
            # print(Mes)
            # print(TipoUsuario)
            # print(Dia_de_la_semana)
            # print(CodigoMunicipio)
            # print(CausaExterna)
            # print(Grupo_etario)
            # print(Rango_horario_ingreso)
            # print(Sexo)

            # Realizar la predicción
            prediction = model.predict(input_data)[0]
            if prediction == 1:
                prediction = 'Dado de alta de urgencias'
            
            elif prediction == 2:
                prediction = 'Remitido a otro nivel de complejidad'
            
            else:
                prediction = 'Hospitalizado'    


            # Mostrar el resultado
            st.success(f"{nombre_paciente} {apellido} tiene una alta probabilidad de ser: {prediction}")

        except Exception as e:
            st.error(f"Hubo un error al procesar los datos: {e}")

with bot2:
    if st.button("Nueva predicción"):
        # Reiniciar los valores manualmente
        st.session_state["nombre_paciente"] = ""
        st.session_state["apellido"] = ""
        st.session_state["Edad"] = ""
        st.session_state["sexo_seleccionado"] = "Seleccione el sexo del paciente"
        st.session_state["municipio_seleccionado"] = "Seleccione un municipio"
        st.session_state["tipo_seleccionado"] = "Seleccione una opción"
        st.session_state["causa_externa_seleccionada"] = "Seleccione una causa externa"
        st.session_state["prestador_seleccionado"] = "Seleccione una IPS"
        st.session_state["eps_seleccionada"] = "Seleccione una EPS o Aseguradora"

        # Forzar la recarga de la aplicación para reflejar los cambios
        st.markdown('<meta http-equiv="refresh" content="0; url=/" />', unsafe_allow_html=True)

        

        


        
        




